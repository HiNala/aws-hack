version: '3.8'

services:
  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: infra/docker/api.Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - PYTHONPATH=/app
      - ENVIRONMENT=development
    env_file:
      - .env
    volumes:
      - ./data/cache:/opt/pyroguard/data/cache
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Inngest Worker
  worker:
    build:
      context: .
      dockerfile: infra/docker/worker.Dockerfile
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
    env_file:
      - .env
    volumes:
      - ./data/cache:/opt/pyroguard/data/cache
    depends_on:
      - redis
      - api
    restart: unless-stopped

  # Redis for caching (optional but recommended)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend (for development)
  web:
    build:
      context: apps/web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NODE_ENV=development
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    depends_on:
      - api
    restart: unless-stopped

volumes:
  redis_data: 